"0","library(shiny)"
"0","ui <- fluidPage("
"0","  "
"0","  # App title ----"
"0","  titlePanel(""Ole Faithful App!""),"
"0","  "
"0","  # Sidebar layout with input and output definitions ----"
"0","  sidebarLayout("
"0","    "
"0","    # Sidebar panel for inputs ----"
"0","    sidebarPanel("
"0","      "
"0","      #Input: Slider for the number of bins ----"
"0","      sliderInput(inputId = ""bins"","
"0","                  label = ""Number of bins:"","
"0","                  min = 1,"
"0","                  max = 50,"
"0","                  value = 30)"
"0","    ),# end sidebarPanel"
"0","    "
"0","    # Main panel for displaying outputs ----"
"0","    mainPanel("
"0","      "
"0","      # Output: Histogram ----"
"0","      plotOutput(outputId = ""distPlot"")"
"0","      "
"0","    ) ) ) # end main, sidebarLayout, fluid page"
"0","# Define server logic required to draw a histogram ----"
"0","server <- function(input, output) {"
"0","  "
"0","  # Histogram of the Old Faithful Geyser Data ----"
"0","  # with requested number of bins"
"0","  # This expression that generates a histogram is wrapped in a call"
"0","  # to renderPlot to indicate that:"
"0","  #"
"0","  # 1. It is ""reactive"" and therefore should be automatically"
"0","  #    re-executed when inputs (input$bins) change"
"0","  # 2. Its output type is a plot"
"0","  output$distPlot <- renderPlot({"
"0","    "
"0","    x    <- faithful$waiting"
"0","    bins <- seq(min(x), max(x), length.out = input$bins + 1)"
"0","    "
"0","    hist(x, breaks = bins, col = ""#75AADB"", border = ""white"","
"0","         xlab = ""Waiting time to next eruption (in mins)"","
"0","         main = ""Histogram of waiting times"")"
"0"," "
"0","  })"
"0","  "
"0","}"
"0","shinyApp(ui, server)"
"2","
Listening on http://127.0.0.1:7150
"
"2","
"
